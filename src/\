let cardNum = [0, 0, 0];

function getNum(){
	let number = ['A', '2', '3', '4', '5', '6', '7', '8', '9', '10', 'J', 'Q', 'K'];
	return number[Math.floor(Math.random() * 13)];
}

function parseNum(n){
	if(n === 'A') return 1;
	if(n === 'J') return 11;
	if(n === 'Q') return 12;
	if(n === 'K') return 13;
	return parseInt(n);
}

function setCard(n){
	let cards = $('.card');
	for(let i in n){
		cardNum[i] = cards.eq(i).text(n[i]);
		cardNum[i] = parseNum(cardNum[i]);
	}
}

function newCards(){
	$('#card2').addClass('card-hide');
	let n = [getNum(), getNum(), getNum()];
	setCard(n)
}

function newGame(){
	newCards();
	$('#allMoney').value = 100;
	$('#money').value = 50;
	$('#fund').value = 10;
}

function isHide(){
	return $('#card2').classList.contains('card-hide');
}

function shot(){
	if(!isHide()) return newCards();
	$('#card2').classList.remove('card-hide');

	function earn(n=1){
		$('#money').value -= -$('#fund').value * n;
		$('#allMoney').value -= $('#fund').value * n;
	}

	if(cardNum[0] === cardNum[1] === cardNum[2]){
		earn(-3);
	}else if(cardNum[0] === cardNum[1] || cardNum[1] === cardNum[2]){
		earn(-2);
	}else if( cardNum[0] > cardNum[1] && cardNum[1] > cardNum[2] ||
		cardNum[0] < cardNum[1] && cardNum[1] < cardNum[2]){
		earn(1);
	}else{
		earn(-1);
	}
}

newGame();

$('#shot').onclick = shot;
$('#giveUp').onclick = newCards;

// ensure input value
function notNegative(e){
	console.log(this, e);
}

[...$All('input')].forEach(i => i.onchange = notNegative);
